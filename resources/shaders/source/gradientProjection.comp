// // #version 450

// // layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

// #include "include/globalUbo.glsl"

// // layout(binding = 1) uniform UniformBufferObject {
// //   bool bypassGradientProjection;
// //   mat4 lastMvpe;
// // }
// // ubo;

// // layout(binding = 2, rgba32f) readonly uniform image2D posTex;
// // layout(binding = 3, rgba32f) readonly uniform image2D rawTex;
// // layout(binding = 4, r32f) readonly uniform image2D thisFrameDepthTex;
// // layout(binding = 5, r32f) readonly uniform image2D lastFrameDepthTex;
// // layout(binding = 6, rgba32f) readonly uniform image2D thisFrameNormalTex;
// // layout(binding = 7, rgba32f) readonly uniform image2D lastFrameNormalTex;
// // layout(binding = 8, rg32f) readonly uniform image2D thisFrameGradientTex;
// // layout(binding = 9, rg32f) readonly uniform image2D lastFrameGradientTex;
// // layout(binding = 10, r32ui) readonly uniform uimage2D thisFrameMeshHashTex;
// // layout(binding = 11, r32ui) readonly uniform uimage2D lastFrameMeshHashTex;
// // layout(binding = 12, rgba8) readonly uniform image2D lastFrameAccumTex;
// // layout(binding = 13, rgba8) readonly uniform image2D
// // lastFrameVarianceHistTex; layout(binding = 14, rgba8) writeonly uniform
// // image2D thisFrameAccumTex; layout(binding = 15, rgba8) writeonly uniform
// // image2D thisFrameVarianceHistTex;

// vec2 uv;
// void main() { uv = gl_GlobalInvocationID.xy; }