#version 450
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

#include "../include/svoBuilderDescriptorSetLayouts.glsl"

#include "../include/core/packer.glsl"

void main() {
  if (any(greaterThanEqual(gl_GlobalInvocationID,
                           ivec3(fragmentListInfoBuffer.data.voxelResolution + 1)))) {
    return;
  }

  ivec3 uvi = ivec3(gl_GlobalInvocationID);

  vec3 fieldNodePos = vec3(chunksInfoBuffer.data.currentlyWritingChunk) +
                      vec3(uvi) / float(fragmentListInfoBuffer.data.voxelResolution);

  vec3 editingPos = chunkEditingInfo.data.pos;
  float radius    = chunkEditingInfo.data.radius;
  float distance  = distance(fieldNodePos, editingPos);
  if (distance > radius) {
    return;
  }

  float weightDecay01 = 1 - smoothstep(0.0, radius, distance);
  weightDecay01       = pow(weightDecay01, 4.0);
  float weightDecay   = mix(0.0, 0.001, weightDecay01);
  // float weightDecay = mix(0.0, 0.001, radius - distance);

  float weight = unpackUint8ToFloat(imageLoad(chunkFieldImage, uvi).r, -0.1, 0.1);
  weight -= weightDecay;
  imageStore(chunkFieldImage, uvi, uvec4(packFloatToUint8(weight, -0.1, 0.1), 0, 0, 0));
}
