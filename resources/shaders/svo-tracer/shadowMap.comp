#version 450
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

#include "../include/svoTracerDescriptorSetLayouts.glsl"

#include "../include/cascadedMarching.glsl"
#include "../include/core/definitions.glsl"
#include "../include/projection.glsl"

void rayGen(out vec3 o, out vec3 d) {
  vec2 shadowMapUv = (vec2(gl_GlobalInvocationID.xy) + vec2(0.5)) / vec2(imageSize(shadowMapImage));
  o                = projectShadowMapUvToShadowMapCamNearPoint(shadowMapUv);
  d                = -atmosInfoUbo.data.sunDir;
}

void main() {
  ivec2 uvi = ivec2(gl_GlobalInvocationID.xy);
  if (any(greaterThanEqual(uvi, ivec2(imageSize(shadowMapImage))))) {
    return;
  }

  // ray gen
  vec3 o, d;
  rayGen(o, d);

  MarchingResult result;
  bool hit = cascadedMarching(result, o, d);
  imageStore(shadowMapImage, uvi, vec4(result.t, 0.0, 0.0, 0.0));
}
