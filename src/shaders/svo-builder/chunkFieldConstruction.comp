#version 450
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

#include "../include/svoBuilderDescriptorSetLayouts.glsl"

#include "../include/perlinNoise.glsl"

void main() {
  if (any(greaterThanEqual(gl_GlobalInvocationID,
                           ivec3(fragmentListInfoBuffer.data.voxelResolution + 1)))) {
    return;
  }

  ivec3 uv = ivec3(gl_GlobalInvocationID);

  uvec3 currentlyWritingChunk = chunksInfoBuffer.data.currentlyWritingChunk;
  ivec3 chunkPosition =
      ivec3(currentlyWritingChunk) - ivec3((chunksInfoBuffer.data.chunksDim - 1) / 2);

  vec3 noiseLookupPos =
      vec3(chunkPosition) + vec3(uv) / float(fragmentListInfoBuffer.data.voxelResolution);

  const float floorHeightMean = 0.0;
  const float floorChangeVar  = 2.5;
  float yPosition             = float(chunkPosition.y) - 0.5 +
                    float(uv.y) / float(fragmentListInfoBuffer.data.voxelResolution);
  // float noise = -yPosition;
  // float floorHeight = fragmentListInfoBuffer.data.voxelResolution * 0.2;
  // float noise = (floorHeight - gl_GlobalInvocationID.y) - floorHeight * cnoise(noiseLookupPos *
  // 4);

  float noise = (floorHeightMean - yPosition) + floorChangeVar * cnoise(noiseLookupPos * 2);

  imageStore(chunkFieldImage, uv, vec4(noise, 0, 0, 0));
}